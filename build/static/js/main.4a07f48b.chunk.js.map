{"version":3,"sources":["ChuckTheme.mp3","Joke.js","CleanJoke.js","AboutMe.js","Home.js","Header.js","AudioPlayer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Joke","props","className","this","joke","Component","CleanJoke","AboutMe","state","href","Home","Header","AudioPlayer","ref","src","sound","controls","autoPlay","React","App","handleClick","event","newJoke","jokeButtonClicked","target","value","setState","handleCleanClick","newCleanJoke","axios","method","url","then","response","data","catch","error","to","path","exact","component","render","onClick","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.4a07f48b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ChuckTheme.9f9fc450.mp3\";","import React, { Component } from \"react\";\nimport \"./App.css\";\n\nclass Joke extends Component {\n    constructor(props) {\n        super()\n    }\n    render() {\n        return (\n            <div className=\"Joke-area\">\n                <div>{this.props.joke}</div>\n            </div>\n        )\n    }\n}\nexport default Joke;","import React, { Component, Link, } from \"react\";\nimport \"./App.css\";\n\n\nclass CleanJoke extends Component {\n    constructor(props) {\n        super()\n    }\n    render() {\n        return (\n            <div className=\"CleanJoke\">\n                <div>{this.props.joke}</div>\n            </div>\n        )\n    }\n}\nexport default CleanJoke;","import React, { Component } from \"react\";\n\nexport class AboutMe extends Component {\n  constructor(props) {\n    super();\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"About_Me_Picture\">\n        <a className=\"LinkedIn\" href=\"https://www.linkedin.com/in/jared-helming-pmp-b371617/\">LinkedIn</a>\n      </div>\n    )\n  }\n}\n\n\nexport default AboutMe;\n","import React, { Component } from \"react\";\n\nexport class Home extends Component {\n  constructor(props) {\n    super();\n    this.state = {};\n  }\n  render() {\n    return (\n      <div className=\"Home\">\n\n      </div>\n    )\n  }\n}\n\n\nexport default Home;","import React from 'react';\n\nfunction Header() {\n  return (<header className=\"App-header\">\n    <h1 className=\"App-title\">Chuck Norris API</h1>\n  </header>)\n}\n\nexport default Header;","import React from 'react'\nimport sound from './ChuckTheme.mp3'\n\nclass AudioPlayer extends React.Component {\n  render() {\n    return (\n      <div>\n        <audio ref=\"audio_tag\" src={sound} controls autoPlay />\n      </div>\n    );\n  }\n}\n\nexport default AudioPlayer;\n","import React, { Component } from 'react';\nimport { Route, Link, Switch, Redirect } from 'react-router-dom';\nimport Joke from \"./Joke\";\nimport CleanJoke from \"./CleanJoke\";\nimport './App.css';\nimport AboutMe from \"./AboutMe\";\nimport axios from \"axios\";\nimport Home from \"./Home\";\nimport Header from \"./Header\";\nimport AudioPlayer from './AudioPlayer';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      joke: []\n    }\n  }\n\n  componentDidMount() {\n    this.newJoke()\n    axios({\n      method: 'get',\n      url: 'http://api.icndb.com/jokes/random/',\n    })\n      .then(response => {\n        this.setState({\n          joke: response.data.value.joke\n        })\n      })\n      .catch(error => {\n      })\n  }\n\n  newJoke() {\n    axios({\n      method: 'get',\n      url: 'http://api.icndb.com/jokes/random/',\n    })\n      .then(response => {\n        this.setState({\n          joke: response.data.value.joke\n        })\n      })\n      .catch(error => {\n      })\n\n  }\n\n  newCleanJoke() {\n    axios({\n      method: 'get',\n      url: 'http://api.icndb.com/jokes/random?exclude=[explicit]',\n    })\n      .then(response => {\n        this.setState({\n          joke: response.data.value.joke\n        })\n      })\n      .catch(error => {\n      })\n\n  }\n\n  handleClick = (event) => {\n    this.newJoke()\n    let jokeButtonClicked = event.target.value\n    this.setState({ jokeButtonClicked })\n  }\n\n  handleCleanClick = (event) => {\n    this.newCleanJoke()\n    let jokeButtonClicked = event.target.value\n    this.setState({ jokeButtonClicked })\n  }\n\n  render() {\n    return (\n      <body>\n        <div className=\"App\">\n          <Header />\n\n          <nav className=\"Nav\">\n            <Link to='/'> Home </Link>\n            <Link to='/About_Me' className=\"AboutMeButton\"> About Me </Link>\n          </nav>\n\n            <Switch>\n              <Route path=\"/\" exact component={Home} />\n              <Route path=\"/About_Me\" component={AboutMe} />\n              <Route path=\"/CleanJoke\" render={() => <CleanJoke joke={this.state.joke} />} />\n              <Route path=\"/Joke\" render={() => <Joke joke={this.state.joke} />} />\n            </Switch>\n        \n\n          <section className=\"JokeButtons\">\n            <Link to='/CleanJoke' > <button onClick={this.handleCleanClick}>Clean Chuck </button> </Link>\n            <Link to='/Joke' > <button onClick={this.handleClick}>Everything Chuck </button> </Link>\n          </section>\n\n          <div>\n            <AudioPlayer />\n          </div>\n\n        </div>\n      </body>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {BrowserRouter as Router} from \"react-router-dom\"\n\nReactDOM.render(\n    <Router>\n      <App />\n    </Router>,\n    document.getElementById('root')\n  );\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}